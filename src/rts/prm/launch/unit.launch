<launch>
  <arg name="n"/>
  <arg name="i"/>
  <arg name="mav_name" default="m100"/>
  <arg name="enable_logging"/>
  <arg name="enable_ground_truth"/>
  <arg name="robot_name" default="$(arg mav_name)_$(arg i)"/>
  <arg name="pci_file" default="$(find prm)/config/$(arg mav_name)/planner_control_interface_sim_config.yaml"/>

 <group if="$(eval ceil( arg('n')/( arg('n') + 1 ) ) )">
    <include file="$(find prm)/launch/unit.launch">
        <arg name="n" value="$(eval arg('n') - 1)"/>
        <arg name="i" value="$(eval arg('i') + 1)"/>
        <arg name="mav_name" value="$(arg mav_name)"/>
        <arg name="enable_logging" value="$(arg enable_logging)"/>
        <arg name="enable_ground_truth" value="$(arg enable_ground_truth)"/>
    </include>
  </group>


  <remap from="$(arg robot_name)/velodyne_points" to="m100/velodyne_points"/>


  <group ns="$(arg robot_name)">

    <node pkg="tf" type="static_transform_publisher" name="tf_51" args="0.15 0 0.0 0.0 0.261 0.0 $(arg robot_name)/base_link $(arg robot_name)/vi_sensor/base_link 10" />
    <node pkg="tf" type="static_transform_publisher" name="tf_1" args="0 0 0 0 0 0 $(arg robot_name)/vi_sensor/base_link $(arg robot_name)fcu 1" />
    <node pkg="tf" type="static_transform_publisher" name="tf_2" args="0.015 0.055 0.0065 -1.57 0.1 -1.57 $(arg robot_name)fcu $(arg robot_name)/vi_sensor/camera_depth_optical_center_link 1" />
    <node pkg="tf" type="static_transform_publisher" name="tf_3" args="0.015 0.055 0.0065 -1.57 0.1 -1.57 $(arg robot_name)fcu $(arg robot_name)/vi_sensor/camera_left_link 1" />
    <node pkg="tf" type="static_transform_publisher" name="tf_4" args="0.015 -0.055 0.0065 -1.57 0.1 -1.57 $(arg robot_name)fcu $(arg robot_name)/vi_sensor/camera_right_link 1" />
    <node pkg="tf" type="static_transform_publisher" name="tf_5" args="0 0 0.05 0.0 0.0 0.0 $(arg robot_name)/base_link $(arg robot_name)/$(arg robot_name)/velodyne 10" />

    <node name="img_throttler" type="throttle" pkg="topic_tools" args="messages vi_sensor/camera_depth/depth/points 5 vi_sensor/camera_depth/depth/points_throttled" />
    <node name="odo_throttler" type="throttle" pkg="topic_tools" args="messages ground_truth/odometry 100 ground_truth/odometry_throttled" />

    <include file="$(find prm)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="robot_name" value="$(arg robot_name)"/>
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg robot_name)"/>
      <arg name="x" value="$(eval 0.0 + arg('i')*2.5)"/>
      <arg name="y" value="$(eval 0.0)"/>
      <arg name="z" value="0.5"/>
    </include>
   
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>

    <arg name="odometry_topic" default="ground_truth/odometry_throttled"/>
    <node name="pose_throttler" type="throttle" pkg="topic_tools" args="messages ground_truth/pose_with_covariance 10 /msf_core/pose" />

    <node pkg="pci_mav" type="pci_mav_ros_node" name="pci_mav_ros_node" output="screen">
      <remap from="command/trajectory" to="command/trajectory" />
      <remap from="planner_server" to="prm" />
      <remap from="planner_homing_server" to="prm/homing" />
      <remap from="odometry" to="$(arg odometry_topic)"/>
      <remap from="best_path_res" to="/rimapp/best_path_res"/>
      <remap from="/$(arg robot_name)/rimapp/plan" to="/rimapp/plan"/>
      <rosparam command="load" file="$(arg pci_file)" />
    </node>



  </group>



</launch>