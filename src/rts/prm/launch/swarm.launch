<launch>
  <arg name="n" default="1"/>
  <arg name="mav_name" default="m100"/>
  <arg name="robot_name" default="$(arg mav_name)"/>
  <arg name="world_name" default="basic"/>
  <arg name="enable_logging" default="true" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  <arg name="debug" default="false"/>
  <arg name="rviz_en" default="true" />
  <arg name="gui" default="false"/>
  <arg name="paused" default="false"/>
  <arg name="launch_prefix" default=""/> <!-- gdb -ex run //args   gnome-terminal -x gdb-->
  <!-- The following line causes gzmsg and gzerr messages to be printed to the console
      (even when Gazebo is started through roslaunch) -->
  <arg name="verbose" default="false"/>

  <!-- Config files -->
  <arg name="rimapp_config_file" default="$(find prm)/config/$(arg robot_name)/rimapp_config.yaml"/>
  <arg name="pci_file" default="$(find prm)/config/$(arg mav_name)/planner_control_interface_sim_config.yaml"/>
  <arg name="voxblox_config_file" default="$(find prm)/config/$(arg robot_name)/voxblox_sim_config.yaml"/>
  <arg name="map_config_file" default="$(arg voxblox_config_file)"/>
  <!-- <arg name="world_file" default="$(find planner_rts_sim)/worlds/pittsburgh_mine.world"/> -->
  <!-- <arg name="world_file" default="$(find planner_rts_sim)/worlds/$(arg world_name).world"/>  -->
  <arg name="world_file" default="$(find rotors_gazebo)/worlds/$(arg world_name).world"/> 

  <node pkg="tf" type="static_transform_publisher" name="tf_53" args="0 0 0 0 0 0 world navigation 100" />

  
  <!-- ROS Gazebo  -->
  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find planner_rts_sim)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find planner_rts_sim)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch"> 
    <arg name="world_name" value= "$(arg world_file)"/>     <!-- <arg name="world_name" value="$(find planner_rts_sim)/worlds/$(arg world_name).world"/> -->
    <arg name="debug" value="$(arg debug)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="verbose" value="$(arg verbose)"/>
  </include>



  <group if="$(eval ceil( arg('n')/( arg('n') + 1 ) ) )">
    <include file="$(find prm)/launch/unit.launch">
        <arg name="n" value="$(eval arg('n') - 1)"/>
        <arg name="i" value="0"/>
        <arg name="mav_name" value="$(arg mav_name)"/>
        <arg name="enable_logging" value="$(arg enable_logging)"/>
        <arg name="enable_ground_truth" value="$(arg enable_ground_truth)"/>
    </include>
  </group>

    <!-- <remap from="odometry" to="$(arg odometry_topic)" /> -->

  <node pkg="prm" type="rimapp_node" name="rimapp_node" output="screen" launch-prefix="$(arg launch_prefix)">
    <remap from="/pointcloud" to="/$(arg robot_name)/velodyne_points" />
    <rosparam command="load" file="$(arg rimapp_config_file)" />
    <rosparam command="load" file="$(arg map_config_file)" />
    <param name="num_robots" type="int" value="$(arg n)"/>
  </node>



  
  <node pkg="rviz" type="rviz" name="rimapp_ui" output="screen" args="-d $(find prm)/config/rviz/m100_sim.rviz"/>
</launch>